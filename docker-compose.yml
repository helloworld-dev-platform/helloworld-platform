version: "3.8"
services:
  backend-server:
    build:
      context: ./backend-api
    image: helloworld-backend-server:latest
    container_name: backend-server
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - backend-net
    ports:
      - "8081:8080"

  websocket-server:
    build:
      context: ./websocket-server
    image: helloworld-websocket-server:latest
    container_name: websocket-server
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - backend-net
    ports:
      - "8091:8090"

  postgres:
    image: postgres:17
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend-net
  #    ports:
  #      - "5432:5432"

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - backend-net
#    ports:
#      - "6379:6379"

volumes:
  postgres-data:
  redis-data:

networks:
  backend-net:
